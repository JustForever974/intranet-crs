'use client';
import React, { useEffect } from 'react';
import { useSession, signOut } from 'next-auth/react';
import { useRouter } from 'next/navigation';
import Sidebar from '@/components/ui/sidebar';
import { motion } from 'framer-motion';

// Composant de carte réutilisable
const InfoCard = ({ title, children, icon }: { title: string; children: React.ReactNode; icon: React.ReactNode }) => (
  <motion.div 
    className="bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50 hover:border-blue-500/50 transition-all duration-300 h-full flex flex-col"
    initial={{ opacity: 0, y: 20 }}
    animate={{ opacity: 1, y: 0 }}
    transition={{ duration: 0.4 }}
  >
    <div className="flex items-center mb-4">
      <div className="p-2 bg-blue-600/20 rounded-lg mr-3">
        {icon}
      </div>
      <h3 className="text-lg font-semibold text-gray-100">{title}</h3>
    </div>
    <div className="text-gray-300 flex-1">
      {children}
    </div>
  </motion.div>
);

export default function AccueilFO() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const displayName = session?.user?.guildNickname || session?.user?.name || 'Utilisateur';

  // Style pour l'image de fond
  const backgroundStyle = {
    backgroundImage: 'url(/backgroundaccueil.png)',
    backgroundSize: 'cover',
    backgroundPosition: 'center',
    backgroundRepeat: 'no-repeat',
    backgroundAttachment: 'fixed',
    minHeight: '100vh',
    width: '100%',
    position: 'absolute',
    top: 0,
    left: 0,
    zIndex: -1,
  };

  // Vérification de l'authentification
  useEffect(() => {
    if (status === 'unauthenticated') {
      router.push('/');
    }
  }, [status, router]);

  // Déconnexion automatique toutes les heures
  useEffect(() => {
    const timer = setInterval(() => {
      signOut({
        callbackUrl: '/',
      });
    }, 60 * 60 * 1000);

    return () => clearInterval(timer);
  }, []);

  // Génération des initiales
  const initials = displayName
    .split(' ')
    .map((n: string) => n[0])
    .join('')
    .toUpperCase()
    .slice(0, 2);

  if (status === 'loading') {
    return (
      <div className="h-screen w-full flex items-center justify-center bg-gray-900">
        <div className="animate-pulse flex flex-col items-center">
          <div className="w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
          <p className="mt-4 text-gray-300">Chargement en cours...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen text-white relative overflow-hidden">
      <div style={backgroundStyle}></div>
      <div className="relative z-10">
        {/* En-tête */}
        <header className="bg-gray-900/80 backdrop-blur-md border-b border-gray-800 sticky top-0 z-10">
          <div className="container mx-auto px-6 py-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-4">
                <img src="/crslogo.svg" alt="Logo CRS" className="h-10 w-auto" />
                <h1 className="text-xl font-bold bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent">
                  Intranet CRS
                </h1>
              </div>
              <div className="hidden md:flex items-center space-x-6">
                <span className="text-gray-300 text-sm">Connecté en tant que: <span className="text-blue-400 font-medium">{displayName}</span></span>
              </div>
            </div>
          </div>
        </header>

        <div className="flex">
          {/* Barre latérale */}
          <Sidebar displayName={displayName} initials={initials} />
          
          {/* Contenu principal */}
          <main className="flex-1 p-6 lg:p-8">
            <motion.div 
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5 }}
              className="mb-8"
            >
              <h2 className="text-2xl md:text-3xl font-bold text-white mb-2">Bonjour, {displayName}</h2>
              <p className="text-gray-400">Bienvenue sur votre espace personnel</p>
            </motion.div>

            {/* Grille de cartes */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
              <InfoCard 
                title="Accès rapide" 
                icon={
                  <svg className="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                  </svg>
                }
              >
                <p className="mb-3">Accédez rapidement aux fonctionnalités principales de la plateforme.</p>
                <button className="text-blue-400 hover:text-blue-300 text-sm font-medium transition-colors">
                  Explorer les fonctionnalités →
                </button>
              </InfoCard>

              <InfoCard 
                title="Documents récents" 
                icon={
                  <svg className="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                }
              >
                <p>Consultez vos derniers documents et ressources partagées par l'équipe.</p>
              </InfoCard>

              <InfoCard 
                title="Équipe" 
                icon={
                  <svg className="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                  </svg>
                }
              >
                <p>Retrouvez les contacts et les informations de vos collègues.</p>
                <button className="mt-3 text-blue-400 hover:text-blue-300 text-sm font-medium transition-colors">
                  Voir l'organigramme →
                </button>
              </InfoCard>
            </div>

            {/* Section principale */}
            <motion.div 
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: 0.1 }}
              className="bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50"
            >
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-xl font-semibold text-white">Tableau de bord</h3>
                <div className="flex space-x-2">
                  <button className="px-3 py-1 text-sm bg-blue-600 hover:bg-blue-700 rounded-md transition-colors">
                    Nouveau
                  </button>
                  <button className="px-3 py-1 text-sm bg-gray-700 hover:bg-gray-600 rounded-md transition-colors">
                    Filtrer
                  </button>
                </div>
              </div>
              
              <div className="border-t border-gray-700 pt-6">
                <p className="text-gray-300 mb-4">Votre espace de travail est prêt à être personnalisé selon vos besoins.</p>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="p-4 bg-gray-700/30 rounded-lg border border-gray-700/50">
                    <h4 className="font-medium text-gray-200 mb-2">Projets en cours</h4>
                    <p className="text-sm text-gray-400">Consultez l'avancement de vos projets actuels.</p>
                  </div>
                  <div className="p-4 bg-gray-700/30 rounded-lg border border-gray-700/50">
                    <h4 className="font-medium text-gray-200 mb-2">Calendrier</h4>
                    <p className="text-sm text-gray-400">Visualisez vos rendez-vous et échéances à venir.</p>
                  </div>
                </div>
              </div>
            </motion.div>
          </main>
        </div>
      </div>
    </div>
  );
}
